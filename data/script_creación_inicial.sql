USE GD1C2015

-- CREANDO ESQUEMA
BEGIN TRANSACTION

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'BOBBY_TABLES')
EXEC sys.sp_executesql N'CREATE SCHEMA [BOBBY_TABLES] AUTHORIZATION [gd]'

COMMIT

-- DROP DE TABLAS
IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.DEPOSITOS') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.DEPOSITOS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.FACTURAS') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.FACTURAS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.FUNCIONES_POR_ROL') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.FUNCIONES_POR_ROL

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.INTENTOS_LOGIN') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.INTENTOS_LOGIN

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.RETIROS_EFECTIVO') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.RETIROS_EFECTIVO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.ROLES_POR_USUARIO') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.ROLES_POR_USUARIO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.TARJETAS') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.TARJETAS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.TRANSFERENCIAS') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.TRANSFERENCIAS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.PERSONAS') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.PERSONAS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.CHEQUES') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.CHEQUES

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.EMISORES') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.EMISORES

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.OPERACIONES') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.OPERACIONES

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.ROLES') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.ROLES

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.TIPOS_DOCUMENTO') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.TIPOS_DOCUMENTO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.CUENTAS') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.CUENTAS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.ESTADOS_CUENTA') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.ESTADOS_CUENTA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.USUARIOS') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.USUARIOS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.TIPOS_CUENTA') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.TIPOS_CUENTA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.MONEDAS') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.MONEDAS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('BOBBY_TABLES.PAISES') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE BOBBY_TABLES.PAISES

----------------------------------------
----------- CREANDO TABLAS -------------
-- LOGIN Y USUARIO

CREATE TABLE BOBBY_TABLES.FUNCIONES_POR_ROL(
	FUN_ID INT IDENTITY(1,1) PRIMARY KEY,
	NOMBRE VARCHAR(120),
	ROL INT
)

CREATE TABLE BOBBY_TABLES.ROLES(
	ROL_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(50),
	ESTADO BIT DEFAULT 1
)

CREATE TABLE BOBBY_TABLES.INTENTOS_LOGIN(
	INT_ID INT IDENTITY(1,1) PRIMARY KEY,
	USUARIO INT,
	FECHA DATE,
	ACCESO BIT -- 1 ES CORRECTO
)

CREATE TABLE BOBBY_TABLES.PAISES(
	PAI_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(250)
)

CREATE TABLE BOBBY_TABLES.ROLES_POR_USUARIO(
	ROL INT NOT NULL,
	USUARIO INT NOT NULL
)

CREATE TABLE BOBBY_TABLES.TIPOS_DOCUMENTO( --NO ESTÁ EN EL DER
	TIP_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(255)
)

CREATE TABLE BOBBY_TABLES.USUARIOS(
	USU_ID INT IDENTITY(1,1) PRIMARY KEY,
	USERNAME VARCHAR(40) NOT NULL UNIQUE,
	PASSWORD VARCHAR(40) NOT NULL,
	ESTADO BIT DEFAULT 1,
	FECHA_ALTA DATE, --TODO FALTA EN EL DER
	FECHA_MODIFICACION DATE, --TODO FALTA EN EL DER
	INTENTOS_FALLIDOS SMALLINT DEFAULT 0, --RESETEAR CUANDO INGRESA
	PREGUNTA_SECRETA VARCHAR(100),
	RESPUESTA VARCHAR(100)
)

CREATE TABLE BOBBY_TABLES.PERSONAS(
	PER_ID INT IDENTITY(1,1) PRIMARY KEY,
	TIPO_DOC INT,
	NUMERO_DOC NUMERIC(10,0),
	NOMBRE VARCHAR(255),
	APELLIDO VARCHAR(255),
	PAIS INT,
	CALLE VARCHAR(255),
	NUMERO_DOM NUMERIC(5,0),
	PISO INT,
	DEPTO VARCHAR(10), --SIGUIENDO EL ESQUEMA DE LA MAESTRA
	LOCALIDAD VARCHAR(60),
	NACIONALIDAD INT,
	FECHA_NACIMIENTO DATE,
	MAIL VARCHAR(255),
	USUARIO INT	
)

-- CUENTAS Y TARJETAS

CREATE TABLE BOBBY_TABLES.MONEDAS(
	MON_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(30)
)

CREATE TABLE BOBBY_TABLES.EMISORES(
	EMI_ID INT IDENTITY(1,1) PRIMARY KEY,
	NOMBRE VARCHAR(60)
)

CREATE TABLE BOBBY_TABLES.TIPOS_CUENTA(
	TIP_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(9), --ORO/PLATA/BRONCE/GRATUITA
	COSTO_MANTENIMIENTO FLOAT,
	COSTO_TRANSACCION FLOAT
)

CREATE TABLE BOBBY_TABLES.ESTADOS_CUENTA(
	EST_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(30),
	FECHA_CIERRE DATE --TIENE LÓGICA ESTO?
)

CREATE TABLE BOBBY_TABLES.CUENTAS(
	CUE_ID NUMERIC(18,0) PRIMARY KEY,
	USUARIO INT,
	PAIS INT,
	MONEDA INT,
	TIPO INT,
	FECHA_ALTA DATE,
	FECHA_EXPIRACION DATE,
	ESTADO INT,
	SALDO FLOAT
)

CREATE TABLE BOBBY_TABLES.TARJETAS(
	TAR_ID INT PRIMARY KEY,
	USUARIO INT,
	ENCRIPTADO NUMERIC(12,0),
	LIMPIO NUMERIC(4,0), --FIXME ASÍ?
	COD_SEGURIDAD INT,
	EMISOR INT,
	FECHA_EMISION DATE,
	FECHA_VENCIMIENTO DATE,
)

-- OPERACIONES
CREATE TABLE BOBBY_TABLES.CHEQUES(
	CHE_ID INT IDENTITY(1,1) PRIMARY KEY,
	NUMERO INT
)

CREATE TABLE BOBBY_TABLES.DEPOSITOS(
	DEP_ID INT PRIMARY KEY,
	TARJETA INT
)

CREATE TABLE BOBBY_TABLES.RETIROS_EFECTIVO(
	RET_ID INT PRIMARY KEY,
	CHEQUE INT
)

CREATE TABLE BOBBY_TABLES.TRANSFERENCIAS(
	TRA_ID INT PRIMARY KEY,
	CUENTA_DESTINO NUMERIC(18,0),
	COSTO FLOAT
)

CREATE TABLE BOBBY_TABLES.OPERACIONES(
	OPE_ID INT PRIMARY KEY,
	CUENTA NUMERIC(18,0),
	MONEDA INT,
	FECHA DATE,
	IMPORTE FLOAT
)

CREATE TABLE BOBBY_TABLES.FACTURAS(
	FAC_ID INT PRIMARY KEY,
	DESCRIPCION VARCHAR(255), --NO ESTÁ EN EL DER
	OPERACION INT,
	FECHA DATE,
	PAGADO BIT
)

--ALTER(S) DE TABLAS

--FK DE ROL EN FUNCIONES_POR_ROL
ALTER TABLE BOBBY_TABLES.FUNCIONES_POR_ROL ADD CONSTRAINT FUN_ROL_FK
FOREIGN KEY (ROL) REFERENCES BOBBY_TABLES.ROLES

--FK DE USUARIO EN INTENTOS_LOGIN
ALTER TABLE BOBBY_TABLES.INTENTOS_LOGIN ADD CONSTRAINT INT_USU_FK
FOREIGN KEY (USUARIO) REFERENCES BOBBY_TABLES.USUARIOS

--PK Y FKS EN ROLES_POR_USUARIO
ALTER TABLE BOBBY_TABLES.ROLES_POR_USUARIO ADD CONSTRAINT ROL_PK
PRIMARY KEY (ROL, USUARIO)

ALTER TABLE BOBBY_TABLES.ROLES_POR_USUARIO ADD CONSTRAINT ROL_USU_FK
FOREIGN KEY (USUARIO) REFERENCES BOBBY_TABLES.USUARIOS

ALTER TABLE BOBBY_TABLES.ROLES_POR_USUARIO ADD CONSTRAINT ROL_ROL_FK
FOREIGN KEY (ROL) REFERENCES BOBBY_TABLES.ROLES

--FKS EN PERSONAS
ALTER TABLE BOBBY_TABLES.PERSONAS ADD CONSTRAINT PER_USU_FK
FOREIGN KEY (USUARIO) REFERENCES BOBBY_TABLES.USUARIOS

ALTER TABLE BOBBY_TABLES.PERSONAS ADD CONSTRAINT PER_TIP_DOC_FK
FOREIGN KEY (TIPO_DOC) REFERENCES BOBBY_TABLES.TIPOS_DOCUMENTO

ALTER TABLE BOBBY_TABLES.PERSONAS ADD CONSTRAINT PER_PAI_FK
FOREIGN KEY (PAIS) REFERENCES BOBBY_TABLES.PAISES

ALTER TABLE BOBBY_TABLES.PERSONAS ADD CONSTRAINT PER_NAC_FK
FOREIGN KEY (NACIONALIDAD) REFERENCES BOBBY_TABLES.PAISES

--FKS EN CUENTAS
ALTER TABLE BOBBY_TABLES.CUENTAS ADD CONSTRAINT CUE_USU_FK
FOREIGN KEY (USUARIO) REFERENCES BOBBY_TABLES.USUARIOS

ALTER TABLE BOBBY_TABLES.CUENTAS ADD CONSTRAINT CUE_PAI_FK
FOREIGN KEY (PAIS) REFERENCES BOBBY_TABLES.PAISES

ALTER TABLE BOBBY_TABLES.CUENTAS ADD CONSTRAINT CUE_MON_FK
FOREIGN KEY (MONEDA) REFERENCES BOBBY_TABLES.MONEDAS

ALTER TABLE BOBBY_TABLES.CUENTAS ADD CONSTRAINT CUE_TIP_FK
FOREIGN KEY (TIPO) REFERENCES BOBBY_TABLES.TIPOS_CUENTA

ALTER TABLE BOBBY_TABLES.CUENTAS ADD CONSTRAINT CUE_EST_FK
FOREIGN KEY (ESTADO) REFERENCES BOBBY_TABLES.ESTADOS_CUENTA

--FKS EN TARJETAS
ALTER TABLE BOBBY_TABLES.TARJETAS ADD CONSTRAINT TAR_PER_FK
FOREIGN KEY (USUARIO) REFERENCES BOBBY_TABLES.USUARIOS

ALTER TABLE BOBBY_TABLES.TARJETAS ADD CONSTRAINT TAR_EMI_FK
FOREIGN KEY (EMISOR) REFERENCES BOBBY_TABLES.EMISORES

--FK TARJETA EN DEPOSITOS
ALTER TABLE BOBBY_TABLES.DEPOSITOS ADD CONSTRAINT DEP_TAR_FK
FOREIGN KEY (TARJETA) REFERENCES BOBBY_TABLES.TARJETAS
--FK OPERACION EN DEPOSITOS (PERMITE HERENCIA)
ALTER TABLE BOBBY_TABLES.DEPOSITOS ADD CONSTRAINT DEP_OPE_FK
FOREIGN KEY (DEP_ID) REFERENCES BOBBY_TABLES.OPERACIONES

--FK CHEQUE EN RETIROS_EFECTIVO
ALTER TABLE BOBBY_TABLES.RETIROS_EFECTIVO ADD CONSTRAINT RET_CHE_FK
FOREIGN KEY (CHEQUE) REFERENCES BOBBY_TABLES.CHEQUES
--FK OPERACION EN RETIROS_EFECTIVO (PERMITE HERENCIA)
ALTER TABLE BOBBY_TABLES.RETIROS_EFECTIVO ADD CONSTRAINT RET_OPE_FK
FOREIGN KEY (RET_ID) REFERENCES BOBBY_TABLES.OPERACIONES

--FK CUENTA EN TRANSFERENCIAS
ALTER TABLE BOBBY_TABLES.TRANSFERENCIAS ADD CONSTRAINT TRA_CUE_FK
FOREIGN KEY (CUENTA_DESTINO) REFERENCES BOBBY_TABLES.CUENTAS
--FK OPERACION EN TRANSFERENCIAS (PERMITE HERENCIA)
ALTER TABLE BOBBY_TABLES.TRANSFERENCIAS ADD CONSTRAINT TRA_OPE_FK
FOREIGN KEY (TRA_ID) REFERENCES BOBBY_TABLES.OPERACIONES

--FKS EN OPERACIONES
ALTER TABLE BOBBY_TABLES.OPERACIONES ADD CONSTRAINT OPE_MON_FK
FOREIGN KEY (MONEDA) REFERENCES BOBBY_TABLES.MONEDAS

ALTER TABLE BOBBY_TABLES.OPERACIONES ADD CONSTRAINT OPE_CUE_FK
FOREIGN KEY (CUENTA) REFERENCES BOBBY_TABLES.CUENTAS

--FK OPERACION EN FACTURAS
ALTER TABLE BOBBY_TABLES.FACTURAS ADD CONSTRAINT FAC_OPE_FK
FOREIGN KEY (OPERACION) REFERENCES BOBBY_TABLES.OPERACIONES

--INSERTANDO DATOS EN LAS TABLAS (MIGRACIÓN)

--AGREGANDO PAÍSES EXISTENTES DE LA TABLA MAESTRA
INSERT INTO BOBBY_TABLES.PAISES
SELECT DISTINCT Cli_Pais_Codigo, Cli_Pais_Desc FROM gd_esquema.Maestra
UNION
SELECT DISTINCT Cuenta_Pais_Codigo, Cuenta_Pais_Desc FROM gd_esquema.Maestra
UNION
SELECT DISTINCT Cuenta_Dest_Pais_Codigo, Cuenta_Dest_Pais_Desc FROM gd_esquema.Maestra
WHERE Cuenta_Dest_Pais_Codigo IS NOT NULL
ORDER BY Cli_Pais_Codigo;

--AGREGANDO LA ÚNICA MOENDA EXISTENTE POR AHORA
INSERT INTO BOBBY_TABLES.MONEDAS
VALUES(1, 'Dólar EE UU')

--AGREGANDO LOS ESTADOS DE CUENTA MANUALMENTE YA QUE NO HAY CARGADOS
INSERT INTO BOBBY_TABLES.ESTADOS_CUENTA
VALUES(1, 'Habilitada', NULL)
INSERT INTO BOBBY_TABLES.ESTADOS_CUENTA
VALUES(2, 'Deshabilitada', NULL)
INSERT INTO BOBBY_TABLES.ESTADOS_CUENTA
VALUES(3, 'Pendiente de activación', NULL)
INSERT INTO BOBBY_TABLES.ESTADOS_CUENTA
VALUES(4, 'Cerrada', NULL)

--AGREGANDO TIPOS DE CUENTA FIJOS CON UN COSTO HARDCODEADO
INSERT INTO BOBBY_TABLES.TIPOS_CUENTA
VALUES(1, 'Gratuita', 0, 100)
INSERT INTO BOBBY_TABLES.TIPOS_CUENTA
VALUES(2, 'Bronce', 10, 50)
INSERT INTO BOBBY_TABLES.TIPOS_CUENTA
VALUES(3, 'Plata', 20, 15)
INSERT INTO BOBBY_TABLES.TIPOS_CUENTA
VALUES(4, 'Oro', 30, 0)

--AGREGANDO EMISORES EXISTENTES CON IDENTITY
INSERT INTO BOBBY_TABLES.EMISORES
SELECT DISTINCT Tarjeta_Emisor_Descripcion FROM gd_esquema.Maestra
WHERE Tarjeta_Emisor_Descripcion IS NOT NULL

--AGREGANDO TIPOS DE DOCUMENTOS EXISTENTES EN TABLA MAESTRA Y MANUALES
INSERT INTO BOBBY_TABLES.TIPOS_DOCUMENTO
SELECT DISTINCT Cli_Tipo_Doc_Cod, Cli_Tipo_Doc_Desc FROM gd_esquema.Maestra
INSERT INTO BOBBY_TABLES.TIPOS_DOCUMENTO
VALUES(10003, 'DNI')
INSERT INTO BOBBY_TABLES.TIPOS_DOCUMENTO
VALUES(10004, 'LE')
INSERT INTO BOBBY_TABLES.TIPOS_DOCUMENTO
VALUES(10005, 'LC')

--AGREGANDO DATOS EN LA TABLA USUARIOS
INSERT INTO BOBBY_TABLES.USUARIOS(USERNAME, PASSWORD, FECHA_ALTA)
SELECT DISTINCT Cli_Mail, '', GETDATE() FROM gd_esquema.Maestra

--AGREGANDO DATOS EN LA TABLA PERSONAS (IDEA: USAR COMO NOMBRE DE USUARIO EL MAIL YA QUE NO TIENEN UNO ASIGNADO Y EL MAIL SE SUPONE QUE ES ÚNICO)
INSERT INTO BOBBY_TABLES.PERSONAS(TIPO_DOC, NUMERO_DOC, NOMBRE, APELLIDO, PAIS, CALLE, NUMERO_DOM, PISO, DEPTO, FECHA_NACIMIENTO, MAIL, USUARIO)
SELECT DISTINCT M.Cli_Tipo_Doc_Cod, M.Cli_Nro_Doc, M.Cli_Nombre, M.Cli_Apellido, M.Cli_Pais_Codigo, M.Cli_Dom_Calle, M.Cli_Dom_Nro, M.Cli_Dom_Piso, M.Cli_Dom_Depto, M.Cli_Fecha_Nac, M.Cli_Mail, U.USU_ID FROM gd_esquema.Maestra M, BOBBY_TABLES.USUARIOS U
WHERE U.USERNAME = M.Cli_Mail

--AGREGANDO DATOS EN LA TABLA CUENTAS
INSERT INTO BOBBY_TABLES.CUENTAS
SELECT DISTINCT M.Cuenta_Numero, U.USU_ID, M.Cuenta_Pais_Codigo, 1, 1, M.Cuenta_Fecha_Creacion, M.Cuenta_Fecha_Cierre, M.Cuenta_Estado, 0 FROM gd_esquema.Maestra M, BOBBY_TABLES.USUARIOS U
WHERE U.USERNAME = M.Cli_Mail


/*
--AGREGANDO DATOS EN LA TABLA TARJETAS
INSERT INTO BOBBY_TABLES.TARJETAS
SELECT DISTINCT * FROM gd_esquema.Maestra M, BOBBY_TABLES.USUARIOS U
WHERE U.USERNAME = M.Cli_Mail

SELECT * FROM gd_esquema.Maestra

select * from CUENTAS

GO

CREATE FUNCTION ENCRIPTAR_TARJETA(@NUMERO_TARJETA NUMERIC(18,0)) RETURNS NUMERIC(12,0) AS BEGIN
	DECLARE @PRIMEROS12 NUMERIC(12,0)
	DECLARE @ENCRIPTADO NUMERIC(12,0)
	
	SET @PRIMEROS12 = @NUMERO_TARJETA
	
	RETURN @ENCRIPTADO
END
*/