-- LOGIN Y USUARIO

CREATE TABLE FUNCIONES_POR_ROL(
	FUN_ID INT IDENTITY(1,1) PRIMARY KEY,
	NOMBRE VARCHAR(120),
	ROL INT
)

CREATE TABLE ROLES(
	ROL_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(50),
	ESTADO BIT DEFAULT 1
)

CREATE TABLE INTENTOS_LOGIN(
	INT_ID INT IDENTITY(1,1) PRIMARY KEY,
	USUARIO INT,
	FECHA DATE,
	ACCESO BIT -- 1 ES CORRECTO
)

CREATE TABLE PAISES(
	PAI_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(250)
)

CREATE TABLE ROLES_POR_USUARIO(
	ROL INT NOT NULL,
	USUARIO INT NOT NULL
)

CREATE TABLE TIPOS_DOCUMENTO( --NO ESTÁ EN EL DER
	TIP_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(255)
)

CREATE TABLE USUARIOS(
	USU_ID INT PRIMARY KEY,
	USERNAME VARCHAR(40) NOT NULL UNIQUE,
	PASSWORD VARCHAR(40) NOT NULL,
	ESTADO BIT DEFAULT 1,
	FECHA_ALTA DATE, --TODO FALTA EN EL DER
	FECHA_MODIFICACION DATE, --TODO FALTA EN EL DER
	INTENTOS_FALLIDOS SMALLINT DEFAULT 0, --RESETEAR CUANDO INGRESA
	PREGUNTA_SECRETA VARCHAR(100),
	RESPUESTA VARCHAR(100)
)

CREATE TABLE PERSONAS(
	PER_ID INT IDENTITY(1,1) PRIMARY KEY,
	TIPO_DOC INT,
	NUMERO_DOC NUMERIC(10,0),
	NOMBRE VARCHAR(255),
	APELLIDO VARCHAR(255),
	PAIS INT,
	CALLE VARCHAR(255),
	NUMERO_DOM NUMERIC(5,0),
	PISO INT,
	DEPTO VARCHAR(10), --SIGUIENDO EL ESQUEMA DE LA MAESTRA
	LOCALIDAD INT,
	NACIONALIDAD INT,
	FECHA_NACIMIENTO DATE,
	MAIL VARCHAR(255),
	USUARIO INT	
)

CREATE TABLE LOCALIDADES( --NO ESTÁ EN EL DER
	LOC_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(50)
)

-- CUENTAS Y TARJETAS

CREATE TABLE MONEDAS(
	MON_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(30)
)

CREATE TABLE EMISORES(
	EMI_ID INT IDENTITY(1,1) PRIMARY KEY,
	NOMBRE VARCHAR(60)
)

CREATE TABLE TIPOS_CUENTA(
	TIP_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(9), --ORO/PLATA/BRONCE/GRATUITA
	COSTO_MANTENIMIENTO FLOAT,
	COSTO_TRANSACCION FLOAT
)

CREATE TABLE ESTADOS_CUENTA(
	EST_ID INT PRIMARY KEY,
	NOMBRE VARCHAR(30),
	FECHA_CIERRE DATE --TIENE LÓGICA ESTO?
)

CREATE TABLE CUENTAS(
	CUE_ID INT PRIMARY KEY,
	USUARIO INT,
	PAIS INT,
	MONEDA INT,
	TIPO INT,
	FECHA_ALTA DATE,
	FECHA_EXPIRACION DATE,
	ESTADO INT,
	SALDO FLOAT
)

CREATE TABLE TARJETAS(
	TAR_ID INT PRIMARY KEY,
	PERSONA INT,
	ENCRIPTADO NUMERIC(12,0),
	LIMPIO NUMERIC(4,0), --FIXME ASÍ?
	COD_SEGURIDAD INT,
	EMISOR INT,
	FECHA_EMISION DATE,
	FECHA_VENCIMIENTO DATE,
)

-- OPERACIONES
CREATE TABLE CHEQUES(
	CHE_ID INT IDENTITY(1,1) PRIMARY KEY,
	NUMERO INT
)

CREATE TABLE DEPOSITOS(
	DEP_ID INT PRIMARY KEY,
	TARJETA INT
)

CREATE TABLE RETIROS_EFECTIVO(
	RET_ID INT PRIMARY KEY,
	CHEQUE INT
)

CREATE TABLE TRANSFERENCIAS(
	TRA_ID INT PRIMARY KEY,
	CUENTA_DESTINO INT,
	COSTO FLOAT
)

CREATE TABLE OPERACIONES(
	OPE_ID INT PRIMARY KEY,
	CUENTA INT,
	MONEDA INT,
	FECHA DATE,
	IMPORTE FLOAT
)

CREATE TABLE FACTURAS(
	FAC_ID INT PRIMARY KEY,
	DESCRIPCION VARCHAR(255), --NO ESTÁ EN EL DER
	OPERACION INT,
	FECHA DATE,
	PAGADO BIT
)

--ALTER(S) DE TABLAS

--FK DE ROL EN FUNCIONES_POR_ROL
ALTER TABLE FUNCIONES_POR_ROL ADD CONSTRAINT FUN_ROL_FK
FOREIGN KEY (ROL) REFERENCES ROLES

--FK DE USUARIO EN INTENTOS_LOGIN
ALTER TABLE INTENTOS_LOGIN ADD CONSTRAINT INT_USU_FK
FOREIGN KEY (USUARIO) REFERENCES USUARIOS

--PK Y FKS EN ROLES_POR_USUARIO
ALTER TABLE ROLES_POR_USUARIO ADD CONSTRAINT ROL_PK
PRIMARY KEY (ROL, USUARIO)

ALTER TABLE ROLES_POR_USUARIO ADD CONSTRAINT ROL_USU_FK
FOREIGN KEY (USUARIO) REFERENCES USUARIOS

ALTER TABLE ROLES_POR_USUARIO ADD CONSTRAINT ROL_ROL_FK
FOREIGN KEY (ROL) REFERENCES ROLES

--FKS EN PERSONAS
ALTER TABLE PERSONAS ADD CONSTRAINT PER_USU_FK
FOREIGN KEY (USUARIO) REFERENCES USUARIOS

ALTER TABLE PERSONAS ADD CONSTRAINT PER_TIP_DOC_FK
FOREIGN KEY (TIPO_DOC) REFERENCES TIPOS_DOCUMENTO

ALTER TABLE PERSONAS ADD CONSTRAINT PER_PAI_FK
FOREIGN KEY (PAIS) REFERENCES PAISES

ALTER TABLE PERSONAS ADD CONSTRAINT PER_NAC_FK
FOREIGN KEY (NACIONALIDAD) REFERENCES PAISES

ALTER TABLE PERSONAS ADD CONSTRAINT PER_LOC_FK
FOREIGN KEY (LOCALIDAD) REFERENCES LOCALIDADES

--FKS EN CUENTAS
ALTER TABLE CUENTAS ADD CONSTRAINT CUE_USU_FK
FOREIGN KEY (USUARIO) REFERENCES USUARIOS

ALTER TABLE CUENTAS ADD CONSTRAINT CUE_PAI_FK
FOREIGN KEY (PAIS) REFERENCES PAISES

ALTER TABLE CUENTAS ADD CONSTRAINT CUE_MON_FK
FOREIGN KEY (MONEDA) REFERENCES MONEDAS

ALTER TABLE CUENTAS ADD CONSTRAINT CUE_TIP_FK
FOREIGN KEY (TIPO) REFERENCES TIPOS_CUENTA

ALTER TABLE CUENTAS ADD CONSTRAINT CUE_EST_FK
FOREIGN KEY (ESTADO) REFERENCES ESTADOS_CUENTA

--FKS EN TARJETAS
ALTER TABLE TARJETAS ADD CONSTRAINT TAR_PER_FK
FOREIGN KEY (PERSONA) REFERENCES PERSONAS

ALTER TABLE TARJETAS ADD CONSTRAINT TAR_EMI_FK
FOREIGN KEY (EMISOR) REFERENCES EMISORES

--FK TARJETA EN DEPOSITOS
ALTER TABLE DEPOSITOS ADD CONSTRAINT DEP_TAR_FK
FOREIGN KEY (TARJETA) REFERENCES TARJETAS
--FK OPERACION EN DEPOSITOS (PERMITE HERENCIA)
ALTER TABLE DEPOSITOS ADD CONSTRAINT DEP_OPE_FK
FOREIGN KEY (DEP_ID) REFERENCES OPERACIONES

--FK CHEQUE EN RETIROS_EFECTIVO
ALTER TABLE RETIROS_EFECTIVO ADD CONSTRAINT RET_CHE_FK
FOREIGN KEY (CHEQUE) REFERENCES CHEQUES
--FK OPERACION EN RETIROS_EFECTIVO (PERMITE HERENCIA)
ALTER TABLE RETIROS_EFECTIVO ADD CONSTRAINT RET_OPE_FK
FOREIGN KEY (RET_ID) REFERENCES OPERACIONES

--FK CUENTA EN TRANSFERENCIAS
ALTER TABLE TRANSFERENCIAS ADD CONSTRAINT TRA_CUE_FK
FOREIGN KEY (CUENTA_DESTINO) REFERENCES CUENTAS
--FK OPERACION EN TRANSFERENCIAS (PERMITE HERENCIA)
ALTER TABLE TRANSFERENCIAS ADD CONSTRAINT TRA_OPE_FK
FOREIGN KEY (TRA_ID) REFERENCES OPERACIONES

--FKS EN OPERACIONES
ALTER TABLE OPERACIONES ADD CONSTRAINT OPE_MON_FK
FOREIGN KEY (MONEDA) REFERENCES MONEDAS

ALTER TABLE OPERACIONES ADD CONSTRAINT OPE_CUE_FK
FOREIGN KEY (CUENTA) REFERENCES CUENTAS

--FK OPERACION EN FACTURAS
ALTER TABLE FACTURAS ADD CONSTRAINT FAC_OPE_FK
FOREIGN KEY (OPERACION) REFERENCES OPERACIONES

--INSERTANDO DATOS EN LAS TABLAS (MIGRACIÓN)

--AGREGANDO PAÍSES EXISTENTES DE LA TABLA MAESTRA
INSERT INTO PAISES
SELECT DISTINCT Cli_Pais_Codigo, Cli_Pais_Desc FROM gd_esquema.Maestra
UNION
SELECT DISTINCT Cuenta_Pais_Codigo, Cuenta_Pais_Desc FROM gd_esquema.Maestra
UNION
SELECT DISTINCT Cuenta_Dest_Pais_Codigo, Cuenta_Dest_Pais_Desc FROM gd_esquema.Maestra
WHERE Cuenta_Dest_Pais_Codigo IS NOT NULL
ORDER BY Cli_Pais_Codigo;

--AGREGANDO LA ÚNICA MOENDA EXISTENTE POR AHORA
INSERT INTO MONEDAS
VALUES(1, 'Dólar EE UU')

--AGREGANDO LOS ESTADOS DE CUENTA MANUALMENTE YA QUE NO HAY CARGADOS
INSERT INTO ESTADOS_CUENTA
VALUES(1, 'Habilitada', NULL)
INSERT INTO ESTADOS_CUENTA
VALUES(2, 'Deshabilitada', NULL)
INSERT INTO ESTADOS_CUENTA
VALUES(3, 'Pendiente de activación', NULL)
INSERT INTO ESTADOS_CUENTA
VALUES(4, 'Cerrada', NULL)

--AGREGANDO TIPOS DE CUENTA FIJOS CON UN COSTO HARDCODEADO
INSERT INTO TIPOS_CUENTA
VALUES(1, 'Gratuita', 0, 100)
INSERT INTO TIPOS_CUENTA
VALUES(2, 'Bronce', 10, 50)
INSERT INTO TIPOS_CUENTA
VALUES(3, 'Plata', 20, 15)
INSERT INTO TIPOS_CUENTA
VALUES(4, 'Oro', 30, 0)

--AGREGANDO EMISORES EXISTENTES CON IDENTITY
INSERT INTO EMISORES
SELECT DISTINCT Tarjeta_Emisor_Descripcion FROM gd_esquema.Maestra
WHERE Tarjeta_Emisor_Descripcion IS NOT NULL

--AGREGANDO TIPOS DE DOCUMENTOS EXISTENTES EN TABLA MAESTRA Y MANUALES
INSERT INTO TIPOS_DOCUMENTO
SELECT DISTINCT Cli_Tipo_Doc_Cod, Cli_Tipo_Doc_Desc FROM gd_esquema.Maestra
INSERT INTO TIPOS_DOCUMENTO
VALUES(10003, 'DNI')
INSERT INTO TIPOS_DOCUMENTO
VALUES(10004, 'LE')
INSERT INTO TIPOS_DOCUMENTO
VALUES(10005, 'LC')

--AGREGAR DATOS EN LA TABLA PERSONAS (IDEA: USAR COMO NOMBRE DE USUARIO EL MAIL YA QUE NO TIENEN UNO ASIGNADO Y EL MAIL SE SUPONE QUE ES ÚNICO)
SELECT DISTINCT Cli_Tipo_Doc_Cod, Cli_Nombre, Cli_Apellido, Cli_Pais_Codigo, Cli_Dom_Calle, Cli_Dom_Nro Cli_Dom_Piso, Cli_Dom_Depto, Cli_Fecha_Nac, Cli_Mail FROM gd_esquema.Maestra

SELECT * FROM gd_esquema.Maestra